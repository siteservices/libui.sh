#!/usr/bin/env libui
#####
#
#	Line Checksum
#
#	F Harvell - Fri May 21 10:58:33 EDT 2021
#
#####
#
# {libui tool} Used to build checksums line by line.
#
# Man page available for this script: man 1 linechecksum
#
#####
#
# Copyright 2018-2025 siteservices.net, Inc. and made available in the public
# domain. Permission is unconditionally granted to anyone with an interest, the
# rights to use, modify, publish, distribute, sublicense, and/or sell this
# content and associated files.
#
# All content is provided "as is", without warranty of any kind, expressed or
# implied, including but not limited to merchantability, fitness for a
# particular purpose, and noninfringement. In no event shall the authors or
# copyright holders be liable for any claim, damages, or other liability,
# whether in an action of contract, tort, or otherwise, arising from, out of,
# or in connection with this content or use of the associated files.
#
#####

##### libui setup

# script version
Version -r 2.000 1.11

# load mods
LoadMod File

##### configuration

# defaults
GetTmp tmpdir

##### options - libui already uses options h, H, X:

AddOption -n end -i ${MAXINT} -k 'End' -d 'The line number to end output.' e:
AddOption -n iterate -i 40 -k 'Iterate' -d 'The number of lines in each iterative block.' i:
AddOption -n lines -i 1 -k 'Lines' -d 'The number of lines to skip between each displayed checksum line.' l:
AddOption -n start -i 0 -k 'Start' -d 'The line number to start output.' s:
AddParameter -r -m -d 'The path of each file to be checked.' files

##### callbacks

# initialization callback
InitCallback () {
  Trace 'Program initialization.'
}

##### functions

##### initialization

# initialize UI
Initialize


#####
#
# main program
#
#####

Trace 'Start %s. (%s)' "${CMD}" "${CMDLINE}"

# loop through files
for file in "${files[@]}"
do
  # print filename if multiple files
  ((1 < ${#files[@]})) && Tell '%s:' "${file##*/}"

  # verify file
  ConfirmVar -f file

  # get file directory
  dir=$([[ -d "${file%/*}" ]] && cd "${file%/*}"; pwd)

  # change to work directory
  Trace 'Change directory to %s.' "${tmpdir}"
  pushd ${tmpdir} > /dev/null

  # headers
  Trace 'Display headers.'
  Tell    '  Line Cumulative Char Sum      CRC32        CRC32 Sum   File Line'
  Tell -- '------ ---------- -------- ---------- ----------------   ---------'

  # process lines
  Trace 'Process lines. (%s)' "${file}"
  lineno=0
  bsum=0
  csum=0
  crcsum=0
  ((0 < iterate)) && ((block = start + iterate)) || block=${end}
  while IFS= read -u 3 -r line # unset IFS
  do
    ((lineno = lineno + 1))

    # sum line
    if ((start <= lineno && block >= lineno && end >= lineno))
    then
      Trace 'Sum line %s. (%s)' "${lineno}" "${line}"
      sum=0
      for ((i=0; i < ${#line}; i++))
      do
        ((sum = sum + $(printf '%d' "'${line:${i}:1}")))
      done
      ((csum = csum + sum))
      ((bsum = bsum + sum))
      crc=$(printf '%s' "${line}" | cksum | cut -f 1 -d ' ')
      ((crcsum += crc))
      (((lineno - start) % lines)) || Tell "%5d: ${D2}%10d ${D3}%8d ${D5}%10d ${D6}%16d ${D9}| ${D7}%s" ${lineno} ${csum} ${bsum} ${crc} ${crcsum} "${line}"
    fi

    # check if end of block
    if ((block <= lineno && end >= lineno))
    then
      Trace 'End of block.'

      # present block totals
      Trace 'Display block totals.'
      Tell '       ----------'
      crc=$(cksum "${dir}/${file##*/}" | cut -f 1 -d ' ')
      Tell "%5d: ${D2}%10d ${D7}(file checksum: ${D6}%10d${D7}) ${D8}%s" ${lineno} ${csum} ${crc} "${dir}/${file##*/}"

      # check if end
      if ((end > lineno))
      then
        Ask -z 'Press return for next block:'
        if AnswerMatches q
        then
          Trace 'Quit %s. (%s)' "${CMD}" 0
          Exit 0
        fi
        ((start = start + iterate))
        ((block = block + iterate))
        bsum=0
      fi
    fi
  done 3< "${dir}/${file##*/}"

  # present final totals
  Trace 'Display final totals.'
  Tell '       =========='
  crc=$(cksum "${dir}/${file##*/}" | cut -f 1 -d ' ')
  Tell "%5d: ${D2}%10d ${D7}(file checksum: ${D6}%10d${D7}) ${D8}%s" ${lineno} ${csum} ${crc} "${dir}/${file##*/}"
  ((1 < ${#files[@]})) && Tell

  # return to original directory
  popd > /dev/null
done

Trace 'Exit %s. (%s)' "${CMD}" 0
Exit 0
