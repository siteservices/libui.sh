#!/usr/bin/env libui
#####
#
#	Markdown Less - View markdown files with less.
#
#	F Harvell - Sun May 28 09:15:21 EDT 2023
#
#####
#
# Display a markdown file in xterm using less.
#
#####
#
# Copyright 2018-2025 siteservices.net, Inc. and made available in the public
# domain. Permission is unconditionally granted to anyone with an interest, the
# rights to use, modify, publish, distribute, sublicense, and/or sell this
# content and associated files.
#
# All content is provided "as is", without warranty of any kind, expressed or
# implied, including but not limited to merchantability, fitness for a
# particular purpose, and noninfringement. In no event shall the authors or
# copyright holders be liable for any claim, damages, or other liability,
# whether in an action of contract, tort, or otherwise, arising from, out of,
# or in connection with this content or use of the associated files.
#
#####

##### libui setup

# script version
Version -r 2.000 1.7

# load mods
LoadMod File

##### configuration

# defaults
MLESSPATH="${MLESSPATH:+${MLESSPATH}:}${COMMONROOT:+${COMMONROOT}/share/doc:}${HOME}/.local/env/share/doc"
${ZSH} && docpath=( "${(@s[:])MLESSPATH}" ) || IFS=: docpath=( ${MLESSPATH} )
width=${COLUMNS:-80}
rule=; for i in {1..$((width - 1))}; do rule+='_'; done
heading1="${Db}${DFm}"
heading2="${DFm}"
heading3="${Db}${DFg}"
heading4="${DFg}"
code="${DFy}"
strong="${Db}"
emphasis="${Dsu}"
retval=0

##### options - libui already uses options h, H, X:

AddParameter -n files -m -r -k 'File' -d 'File to view.'

##### callbacks

InfoCallback () {
  Trace 'Usage info.'
  cat << EOF
The mless script provides basic interpretation of markdown in a terminal
environment using less. Due to the limited terminal environment, mless has
limited capabilities including:

  - Basic support for headers (up to 4 levels)
  - Support for emphasis and underlined text
  - Support for unordered lists
  - Basic support for ordered lists (up to 3 digits)
  - Basic support for block indents (up to 4 levels)
  - Basic support for backslash (\\) escapes
  - Removing (without supporting) HTML tags
  - Removing doubled blank lines
EOF
}

InitCallback () {
  Trace 'In user init callback.'

  Trace 'Check for files. (%s)' "${files[*]}"
  local dir
  local found
  local md
  local mdfiles
  GetFileList mdfiles "${files}"
  if [[ -z "${mdfiles}" ]]
  then
    GetFileList mdfiles "${files[@]/%/.md}"
    if [[ -z "${mdfiles}" ]]
    then
      for file in "${files[@]}"
      do
        for dir in "${docpath[@]}"
        do
          GetFileList found "${file/#/${dir%/}/}"
          [[ -n "${found}" ]] && mdfiles+=( "${found[@]}" ) && break
          md=( "${file/%/.md}" )
          GetFileList found "${md[@]/#/${dir%/}/}"
          [[ -n "${found}" ]] && mdfiles+=( "${found[@]}" ) && break
        done
      done
    fi
  fi
  [[ -n "${mdfiles[@]}" ]] && files=( "${mdfiles[@]}" ) || Error 'File not found.'
}

##### functions

##### initialization

# initialize UI
Initialize


#####
#
# main program
#
#####

Trace 'Start %s. (%s)' "${CMD}" "${CMDLINE}"

Trace 'Loop through files. (%s)' "${files[*]}"
for file in "${files[@]}"
do
  Trace 'Display file. (%s)' "${file}"
  cat "${file}" | \
      sed -E "/^\`\`\`$/,/^\`\`\`$/!{
        s/^\s{0,3}[\*_\-]\s*[\*_\-]\s*[\*_\-]\s*[\*_\-]*\s*$/${rule}/;
        s/^#\s(.*)$/${heading1}\1${D}\n/;
        s/^##\s(.*)$/${heading2}\1${D}\n/;
        s/^###\s(.*)$/${heading3}\1${D}\n/;
        s/^#####*\s(.*)$/${heading4}\1${D}\n/;
        s/\*\*([^\*]+)\*\*/${strong}\1${D}/g;
        s/__([^_]+)__/${strong}\1${D}/g;
        s/\*([^\*]+)\*/${emphasis}\1${D}/g;
        s/(^|[^\\])_([^_]+)([^\\])_/${emphasis}\1\2\3${D}/g;
        s/\`\`\`([^\`]+)\`\`\`/${code}\1${D}/g;
        s/(^|[^\`])\`([^\`]+)\`([^\`]|$)/\1${code}\2${D}\3/g;
        s/(^|[^\\])<[^>]*([^\\])>/\1/g;
        s/^(\s*)[\*+\-]\s(.*)$/\1  o  \2/;
        s/^>>>>\s/  |  |  |  |  /;
        s/^>>>\s/  |  |  |  /;
        s/^>>\s/  |  |  /;
        s/^>\s/  |  /;
      }" | \
      sed -E '/^\s*$/{N; /^\s*\n\s*$/s///}' | \
      sed -E "/^\`\`\`$/,/^\`\`\`$/{/\`\`\`/d; s/^/    ${code}/; s/$/${D}/;}" | \
      sed -E 's/\\\\/\\/g' | \
      sed -E 's/\\([^\\])/\1/g' | \
      sed -E '/^\s*[0-9]{1,9}[.)]/,/^\s*$/{s/^(\s*)([0-9]{1,9})([.)])(.*)$/\1  .\2\3  \4/;}' | \
      awk 'BEGIN { i = 1 } /^\s*\.[0-9]{1,9}[\.\)]/ { if (sub(/\.[0-9]{1,9}/, i++, $0)) print $0; next } { i = 1; print }' | \
      awk "BEGIN { cols = ${width} - 1; line = \"\" } { if (/^(\s|$)/) { if (length(line) > 0) { print line } line = \$0; if (/^\s*$/) { printf \"\n\" } } else { for (i = 1; i <= NF; i++) { if (length(line) > 0) { if (length(line) + length(\$i) < cols) { line = (line \" \" \$i) } else { print line; line = \$i } } else { line = \$i } } } } END { if ( length(line) > 0 ) printf \"%s\", line }" | \
      less -R
done

Trace 'Exit %s. (%s)' "${CMD}" "${retval}"
Exit "${retval}"
