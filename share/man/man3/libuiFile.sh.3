.\" Manpage for libuiFile.sh
.\" Please contact fharvell@siteservices.net to correct errors or typos. Please
.\" note that the libui library is young and under active development.
.\"
.\" Copyright 2018-2025 siteservices.net, Inc. and made available in the public
.\" domain.  Permission is unconditionally granted to anyone with an interest,
.\" the rights to use, modify, publish, distribute, sublicense, and/or sell this
.\" content and associated files.
.\"
.\" All content is provided "as is", without warranty of any kind, expressed or
.\" implied, including but not limited to merchantability, fitness for a
.\" particular purpose, and noninfringement.  In no event shall the authors or
.\" copyright holders be liable for any claim, damages, or other liability,
.\" whether in an action of contract, tort, or otherwise, arising from, out of,
.\" or in connection with this content or use of the associated files.
.\"
.Dd January 2, 2024
.Dt LIBUIFILE.SH 3
.Os
.Sh NAME
.Nm libuiFile.sh
.Nd File Utilities Mod for the
.Xr libui.sh 3
user interface library
.Pp
.Sh SYNOPSIS
.Sy LoadMod File
.Pp
.Sy Close
.Op Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9
.Op Ar <file_path>
.Pp
.Sy Flush
.Op Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9
.Op Ar <file_path>
.Pp
.Sy GetFileList
.Op Fl d Fl e Fl f Fl h Fl n Fl p Fl r Fl w
.Op Fl c Ar <directory_path>
.Ar <variable_name>
.Op Ar <file_specification> ...
.Pp
.Sy GetRealPath
.Op Fl P Fl v
.Ar <variable_name> Op Ar <file_specification>
.Pp
.Sy GetTmp
.Op Fl d Fl f Fl s
.Ar <variable_name>
.Pp
.Sy MkDir
.Op Fl s Fl W
.Op Fl g Ar <group>
.Op Fl m Ar <mask>
.Ar <path>
.Pp
.Sy Open
.Op Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9 Fl a Fl b Fl c
.Op Fl B Ar <path>
.Op Fl m Ar <mask>
.Op Fl t Ar <lock_timeout>
.Op Fl w Ar <lock_warning_timeout>
.Ar <file_path> ...
.Pp
.Sy PathMatches
.Op Fl P
.Ar <file_spec_1> <file_spec_2>
.Pp
.Sy RemoveFileList
.Op Fl f
.Ar <variable_name>
.Pp
.Sy Write
.Op Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9 Fl a Fl c
.Op Fl f Ar <file_path>
.Op Fl p Ar <format>
.Op Fl r Ar <record_marker>
.Ar <data> ...
.Sh DESCRIPTION
The
.Nm
.Xr libui.sh 3
mod provides functions for accessing and managing files.
It includes support for file creation, access, listing, removal, and locking.
.Pp
The
.Nm
.Xr libui.sh 3
mod provides the following commands:
.Ss Close
The following command unlocks, closes, and disassociates the file ID associated
with a file by the
.Sx Open
command:
.Bd -ragged -offset 4n
.Sy Close
.Op Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9
.Op Ar <file_path>
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9
The numeric options
.Fl 1
through
.Fl 9
provide a shorthand to associate a file ID with a file path.
.El
.Pp
Unlocks and disassociates the
.Ar <file_path>
associated with a file ID by the
.Sx Open
command.
See the
.Sx Open
command for more information.
.Pp
The Close command works with either a numeric file ID option or a
.Ar <file_path> .
If no file ID or
.Ar <file_path>
is provided, all open / locked files are closed.
.Pp
Note: The
.Sy Close
command is executed (with no parameters) during exit to unlock / close all open
files.
.Ss Flush
The following command flushes the file ID associated with a file by the
.Sx Open
command:
.Bd -ragged -offset 4n
.Sy Flush
.Op Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9
.Op Ar <file_path>
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9
The numeric options
.Fl 1
through
.Fl 9
provide a shorthand to associate a file ID with a file path.
.El
.Pp
Flushes output to the
.Ar <file_path>
associated with a file ID by the
.Sx Open
command.
(See the
.Sx Open
command for more information.)
Flushing is achieved by closing the associated file descriptor and then
reopening the file with the same file descriptor.
Note: Flushing should only be required when using both
.Sx Write
and other, non-libui commands to write to the same file.
It also appears to only be required when using the Bash shell.
.Pp
The Flush command works with either a numeric file ID option or a
.Ar <file_path> .
.Ss GetFileList
The following command assigns a listing of the files matching the provided file
specification to the named array variable:
.Bd -ragged -offset 4n
.Sy GetFileList
.Op Fl d Fl e Fl f Fl h Fl n Fl p Fl r Fl w
.Op Fl c Ar <directory_path>
.Ar <variable_name>
.Op Ar <file_specification> ...
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl c
Change directory to the provided
.Ar <directory_path>
directory prior to getting the file list.
This effectively makes the list relative to the
.Ar <directory_path> .
Note: If the
.Ar <file_specification>
provided is not under the
.Ar <directory_path> ,
the file list will include absolute paths.
.It Fl d
Match directories only.
.It Fl e
Generate an error when the pattern matches nothing.
.It Fl f
Match files only.
.It Fl h
Perform a recursive search including hidden subdirectories.
.It Fl n
Return only filenames.
This is useful when getting a list from a directory other than the current
directory.
.It Fl p
Return only paths, i.e., only the path portion without any filenames.
.It Fl r
Perform a recursive search, i.e., include selected subdirectories.
.It Fl w
Generate a warning when the pattern matches nothing.
.El
.Pp
Set the
.Ar <variable_name>
array variable to a list of the files specified by
.Ar <file_specification> .
More than one
.Ar <file_specification>
can be provided.
The collection of paths can optionally be recursive.
Recursive searches only search non-hidden subdirectories unless the -h (Hidden
Recursive Search) option flag is used.
.Pp
Note:
.Sy GetFileList
will generate an error (No file found) unless the
.Fl E
(No error on empty) option is provided.
.Ss GetRealPath
The following command dereferences the provided file specification and returns
the associated absolute path:
.Bd -ragged -offset 4n
.Sy GetRealPath
.Op Fl P Fl v
.Ar <variable_name> Op Ar <file_specification>
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl P
Get real path for the directory portion of the path only, i.e., ignore the
filename.
Note: The full path, including the filename, is returned in the
.Ar <variable_name>
variable.
This is useful when getting the real path prior to creating the file.
.It Fl v
Only validate the path.
The variable is updated with a valid path, changing an initial "~" to ${HOME}
and an initial "." to ${IWD} (the initial (starting) working directory).
This is useful when the path does not exist, but will be created.
.El
.Pp
Set the
.Ar <variable_name>
variable to the real, dereferenced, path of the path specified by
.Ar <file_specification> .
This command dereferences any symbolic links and provides the "real" absolute
path of the specified file / path.
Only one
.Ar <file_specification>
can be provided.
If a file specification is not provided, the value currently stored in the
.Ar <variable_name>
variable is used as the file specification.
.Ss GetTmp
The following command creates a temporary directory / file / subdirectory and
assigns the path to the named variable:
.Bd -ragged -offset 4n
.Sy GetTmp
.Op Fl d Fl f Fl s
.Ar <variable_name>
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl d
Create temporary directory.
.It Fl f
Create temporary file.
.It Fl s
Create temporary subdirectory.
.El
.Pp
When called with the
.Fl d
option (or without an option), a temporary directory will be created on the
first call and its path is stored in the
.Ar <variable_name>
variable.
.Pp
When called with the
.Fl f
option, a file with a unique filename will be created within the temporary
directory (above) and its path is stored in the
.Ar <variable_name>
variable.
.Pp
When called with the
.Fl s
option, a subdirectory with a unique filename will be created within the
temporary directory (above) and its path is stored in the
.Ar <variable_name>
variable.
.Pp
Note:
.Sy GetTmp
will only create one temporary (parent) directory.
It will reuse that same directory if called more than once.
The temporary (parent) directory and its contents should be removed
automatically on exit.
.Ss MkDir
The following command creates a directory path and sets permissions on any
created directories:
.Bd -ragged -offset 4n
.Sy MkDir
.Op Fl s Fl W
.Op Fl g Ar <group>
.Op Fl m Ar <mask>
.Ar <path>
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl g Ar <group>
Set the group ownership of any created directories to
.Ar <group> .
.It Fl m Ar <mask>
Use the
.Ar <mask>
as the umask when creating any needed directories.
.It Fl s
Set the setgid bit for any created directories.
.It Fl W
Do not generate a warning message if a failure occurs when making the directory.
.El
While the standard
.Xr mkdir 1
command can be used to create a directory path (with the -p option flag), it
does not properly set the permissions of any created parent directories.
This command, however, sets the proper permissions on any created directories.
.Ss Open
The following command opens a file, locks it, and associates a file ID with the
file path:
.Bd -ragged -offset 4n
.Sy Open
.Op Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9 Fl a Fl b Fl c
.Op Fl B Ar <path>
.Op Fl m Ar <mask>
.Op Fl t Ar <lock_timeout>
.Op Fl w Ar <lock_warning_timeout>
.Ar <file_path> ...
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9
The numeric options
.Fl 1
through
.Fl 9
provide a shorthand to associate a file ID with a file path.
.It Fl a
Open the file, and append after any existing data. (This is the default.)
.It Fl b
Backup the
.Ar <file_path>
file to a bzipped file in the same directory with the same filename and with a
".0.bz2" extension (e.g.: <file_path>.0.bz2).
.It Fl B Ar <path>
Backup the
.Ar <file_path>
file to a bzipped file located at
.Ar <path> .
.Pp
If
.Ar <path>
is a directory, then the backup file will have the same filename with a ".0.bz2"
extension (e.g.: <file_path>.0.bz2) and will be located in the
.Ar <path>
directory.
Additional backup copies, up to LIBUI_BACKUPS copies (default of 10), will also
be kept with each successive version incrementally numbered starting with 1.
.Pp
If
.Ar <path>
is not a directory, then the backup file will have the
.Ar <path>
filename with a ".0.bz2" extension (e.g.: <path>.0.bz2) and will be located in
the same directory as the
.Ar <file_path>
file.
.It Fl c
Open the file, removing any existing data.
.It Fl m Ar <mask>
Use
.Ar <mask>
to set the umask when creating a new file using the
.Fl c
(Create) file option.
See
.Xr umask 1
for more information about the available
.Sy umask
options.
.It Fl t Ar <lock_timeout>
Use
.Ar <lock_timeout>
as the time in seconds to wait for an exclusive access lock on
.Ar <path> .
The script will display a caution message if the exclusive access lock cannot be
obtained.
The
.Xr libui.sh 3
default timeout can be changed by setting the environment variable
.Ev LIBUI_LOCKTIMEOUT .
The default wait time is 30 seconds.
  local _File_w="${LIBUI_LOCKWARN:-5}"
.It Fl w Ar <lock_warning_timeout>
Use
.Ar <lock_warning_timeout>
as the wait time in seconds before displaying a caution message to the user that
the script is waiting for an exclusive access lock on
.Ar <path> .
The
.Xr libui.sh 3
default wait time can be changed by setting the environment variable
.Ev LIBUI_LOCKWARN .
The default wait time is 5 seconds.
.El
.Pp
Opens the
.Ar <file_path>
file (creating it if necessary), locks the file, and associates the
.Ar <file_path>
with a file ID.
Any file opened using the
.Sy Open
command should be closed using the
.Sx Close
command.
.Pp
If no file ID is provided, the next file ID is allocated starting with 1.
The file ID is incremented each time
.Sy Open
is called.
The file ID can be used as an option flag with the
.Sx Action
command, the
.Sx Write
command, or the
.Sx Close
command.
See the
.Sx Action
command, the
.Sx Write
command, or the
.Sx Close
command above fore more information.
.Pp
If the
.Fl a
(Append) option flag is provided, writes to the file will be appended after any
existing data.
This is the default operation.
If the
.Fl c
(Create) option flag is provided, the file is created, i.e. any existing data is
erased.
.Ss PathMatches
The following command checks if the two provided file paths are the same file /
directory:
.Bd -ragged -offset 4n
.Sy PathMatches
.Op Fl P
.Ar <file_spec_1> <file_spec_2>
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl P
Match the path portion only, ignoring the filenames.
.El
.Pp
Compares the file inodes associated with the file paths specified by
.Ar <file_spec_1>
and
.Ar <file_spec_2> .
Returns 0 (true) if the files (inodes) exist and match.
Returns 1 (false) if a file does not exist or the inodes do not match.
Only one
.Ar <file_spec_1>
and one
.Ar <file_spec_2>
can be provided.
.Pp
Note: This command dereferences any symbolic links and uses filesystem inodes to
ensure an accurate match.
.Ss RemoveFileList
The following command removes the files / directories matching the provided
paths listed in the named array variable:
.Bd -ragged -offset 4n
.Sy RemoveFileList
.Op Fl f
.Ar <variable_name>
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl f
Force removal of the files / directories.
.El
.Pp
Removes the paths contained in the
.Ar <variable_name>
array variable.
The
.Fl f
option uses the
.Fl f
(Force) option with the rm / rmdir commands to force the removal of the files /
directories.
.Pp
Note: The
.Sx RemoveFileList
command causes
.Nm
to load the sort mod if not already loaded.
See
.Xr libuiSort.sh 3
for more information.
.Ss Write
The following command writes data into a file associated with a file ID:
.Bd -ragged -offset 4n
.Sy Write
.Op Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9 Fl a Fl c
.Op Fl f Ar <file_path>
.Op Fl p Ar <format>
.Op Fl r Ar <record_marker>
.Ar <data> ...
.Ed
.Pp
The command options are as follows:
.Bl -tag -offset 4n -width 4n
.It Fl 1 Fl 2 Fl 3 Fl 4 Fl 5 Fl 6 Fl 7 Fl 8 Fl 9
The numeric options
.Fl 1
through
.Fl 9
provide a shorthand to access the file paths associated with a file ID by the
.Sx Open
command.
See the
.Sx Open
command for more information.
.It Fl a
Open the file, and append
.Ar <data>
after any existing data.
This option is only applicable when also using the
.Fl f Ar <file_path>
option.
.It Fl c
Open the file, removing any existing data before writing
.Ar <data> .
This option is only applicable when also using the
.Fl f Ar <file_path>
option.
.It Fl f Ar <file_path>
The
.Fl f Ar <file_path>
(File) option provides direct access to the file provided as
.Ar <file_path> .
.Pp
Important: The use of the
.Fl f Ar <file_path>
option does not lock the
.Ar <file_path>
file for exclusive access.
If the
.Ar <file_path>
file should be locked, the
.Sx Open
and
.Sx Close
commands should be used before and after the
.Sy Write
command.
.It Fl p
The
.Fl p
(Print Format) option supports writing the
.Ar <data>
using the
.Xr printf 3
style format string provided in
.Ar <format> .
.It Fl r
The
.Fl r
(Record Marker) option outputs the
.Ar <data>
following each entry with the marker provided in
.Ar <record_marker> .
.El
.Pp
Writes the
.Ar <data>
to the file associated with an
.Sx Open
file ID or provided file.
The default operation is to write to the file associated with file ID 1.
.Sh FILES
The
.Nm
.Xr libui.sh 3
mod creates a temporary directory (via mktemp) when using the GetTmp command.
The library attempts to track and remove the temporary directory upon exit.
Certain circumstances (e.g.: some crashes) prevent the _Cleanup handler from
being executed leaving the temporary directory in place.
.Sh EXAMPLES
Some examples include:
.Bd -literal -offset 4n
.Sy LoadMod File
.Sy GetTmp tmpdir
.Ed
.Pp
Creates a unique, temporary directory and assigns the path to the "tmpdir"
variable.
.Bd -literal -offset 4n
.Sy LoadMod File
.Sy Open -1 -c ${tmpdir}/log
.Sy Write -1 "Added the ${var} data to ${file}."
.Sy Close -1
.Ed
.Pp
Creates, opens, and locks the file "${tmpdir}/log", writes the new entry to the
file, and then unlocks the file.
.Sh Notes
The
.Nm
.Xr libui.sh 3
mod maps the file IDs to file descriptors 10 through 19, with 10
reserved for
.Xr libui.sh 3
internal file operations.
.Sh SEE ALSO
.Xr bash 1 ,
.Xr mkdir 1 ,
.Xr zsh 1 ,
.Xr libui.sh 3
.Sh AUTHORS
.An F Harvell
.Mt <fharvell@siteservices.net>
.Sh BUGS
No known bugs.
